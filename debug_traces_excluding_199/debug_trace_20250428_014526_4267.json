{
  "data_source": "kodcode",
  "model_code": "import sys\nfrom collections import defaultdict\n\ndef main():\n    lines = [line.strip() for line in sys.stdin if line.strip() != '']\n    for line in lines:\n        if line == '.':\n            break\n        freq = defaultdict(int)\n        for c in line:\n            freq[c] += 1\n        if not freq:\n            continue\n        max_freq = max(freq.values())\n        max_chars = [char for char, cnt in freq.items() if cnt == max_freq]\n        max_chars.sort()\n        for char in max_chars:\n            print(char)\n\nmain()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}