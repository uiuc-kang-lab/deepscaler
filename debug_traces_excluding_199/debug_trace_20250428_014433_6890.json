{
  "data_source": "kodcode",
  "model_code": "def solve_sudoku(board):\n    def get_possible_numbers(b, i, j):\n        row = [b[i][k] for k in range(9)]\n        col = [b[k][j] for k in range(9)]\n        subgrid_i = (i // 3) * 3\n        subgrid_j = (j // 3) * 3\n        subgrid = []\n        for x in range(subgrid_i, subgrid_i + 3):\n            for y in range(subgrid_j, subgrid_j + 3):\n                subgrid.append(b[x][y])\n        possible = set(range(1, 10))\n        possible.update(row)\n        possible.update(col)\n        possible.update(subgrid)\n        return [num for num in possible if num != '.']\n\n    for i in range(9):\n        for j in range(9):\n            if board[i][j] == '.':\n                possible = get_possible_numbers(board, i, j)\n                for num in possible:\n                    board[i][j] = num\n                    if solve_sudoku(board):\n                        return board\n                    board[i][j] = '.'\n                return  # backtrack\n    return board",
  "tests": "from solution import solve_sudoku\n\ndef test_sudoku():\n    board = [\n        ['5', '3', '.', '.', '7', '.', '.', '.', '.'],\n        ['6', '.', '.', '1', '9', '5', '.', '.', '.'],\n        ['.', '9', '8', '.', '.', '.', '.', '6', '.'],\n        ['8', '.', '.', '.', '6', '.', '.', '.', '3'],\n        ['4', '.', '.', '8', '.', '3', '.', '.', '1'],\n        ['7', '.', '.', '.', '2', '.', '.', '.', '6'],\n        ['.', '6', '.', '.', '.', '.', '2', '8', '.'],\n        ['.', '.', '.', '4', '1', '9', '.', '.', '5'],\n        ['.', '.', '.', '.', '8', '.', '.', '7', '9']\n    ]\n    \n    solve_sudoku(board)\n    \n    expected = [\n        ['5', '3', '4', '6', '7', '8', '9', '1', '2'],\n        ['6', '7', '2', '1', '9', '5', '3', '4', '8'],\n        ['1', '9', '8', '3', '4', '2', '5', '6', '7'],\n        ['8', '5', '9', '7', '6', '1', '4', '2', '3'],\n        ['4', '2', '6', '8', '5', '3', '7', '9', '1'],\n        ['7', '1', '3', '9', '2', '4', '8', '5', '6'],\n        ['9', '6', '1', '5', '3', '7', '2', '8', '4'],\n        ['2', '8', '7', '4', '1', '9', '6', '3', '5'],\n        ['3', '4', '5', '2', '8', '6', '1', '7', '9']\n    ]\n    \n    assert board == expected"
}