{
  "data_source": "kodcode",
  "model_code": "def compress(input_string):\n    if not input_string:\n        return \"\"\n    \n    compressed = []\n    current_char = input_string[0]\n    count = 1\n    \n    for char in input_string[1:]:\n        if char == current_char:\n            count += 1\n        else:\n            compressed.append((current_char, count))\n            current_char = char\n            count = 1\n    \n    compressed.append((current_char, count))\n    compressed_str = ''.join([f\"{c}{n}\" for c, n in compressed])\n    \n    if len(compressed_str) < len(input_string):\n        return compressed_str\n    else:\n        return input_string",
  "tests": "{'stdin': ['aabcccccaaa', 'aaa', 'bbbbbcccd', 'abcdef', 'aabb', 'aabbcc', 'a', 'z'], 'stdout': ['a2b1c5a3', 'a3', 'b5c3d1', 'abcdef', 'aabb', 'aabbcc', 'a', 'z']}"
}