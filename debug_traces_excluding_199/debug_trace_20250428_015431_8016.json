{
  "data_source": "kodcode",
  "model_code": "n, w = map(int, input().split())\nflowers = [tuple(map(int, input().split())) for _ in range(n)]\nflowers.sort(key=lambda x: x[0])\n\ntotal = 0\ncount = 0\nfor ai, bi in flowers:\n    total += ai\n    if total > w:\n        break\n    count += 1\n\nprint(count)",
  "tests": "from solution import max_flower_types\n\ndef test_case_1():\n    N = 4\n    W = 10\n    flower_data = [(4, 2), (3, 3), (5, 4), (2, 1)]\n    assert max_flower_types(N, W, flower_data) == 3\n\ndef test_case_2():\n    N = 3\n    W = 5\n    flower_data = [(6, 5), (4, 3), (2, 2)]\n    assert max_flower_types(N, W, flower_data) == 1\n\ndef test_case_3():\n    N = 5\n    W = 15\n    flower_data = [(3, 4), (3, 2), (2, 6), (1, 5), (5, 3)]\n    assert max_flower_types(N, W, flower_data) == 5\n\ndef test_case_4():\n    N = 2\n    W = 10\n    flower_data = [(7, 2), (4, 3)]\n    assert max_flower_types(N, W, flower_data) == 1\n\ndef test_case_5():\n    N = 6\n    W = 8\n    flower_data = [(2, 3), (1, 4), (6, 5), (5, 2), (3, 6), (1, 1)]\n    assert max_flower_types(N, W, flower_data) == 4\n\ndef test_case_6():\n    N = 1\n    W = 3\n    flower_data = [(3, 3)]\n    assert max_flower_types(N, W, flower_data) == 1\n\ndef test_case_7():\n    N = 0\n    W = 0\n    flower_data = []\n    assert max_flower_types(N, W, flower_data) == 0"
}