{
  "data_source": "kodcode",
  "model_code": "import sys\n\ndef letter_frequency_analyzer(input_lines):\n    max_freq = -1\n    result = []\n    for line in input_lines:\n        if line == '.':\n            break\n        freq = {}\n        for c in line:\n            if c.islower():\n                freq[c] = freq.get(c, 0) + 1\n        current_max = max(freq.values()) if freq else 0\n        max_letters = [k for k, v in freq.items() if v == current_max]\n        max_letters.sort()\n        output = ' '.join(max_letters)\n        print(output)\n\nif __name__ == \"__main__\":\n    input_lines = [line.strip() for line in sys.stdin if line.strip() != '.']\n    letter_frequency_analyzer(input_lines)",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}