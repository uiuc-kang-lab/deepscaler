{
  "data_source": "kodcode",
  "model_code": "def count_unique_substrings(s):\n    subsets = set()\n    n = len(s)\n    for i in range(n):\n        for j in range(i, n):\n            substr = s[i:j+1]\n            subsets.add(substr)\n    return len(subsets)",
  "tests": "from solution import count_unique_substrings\n\ndef test_single_character():\n    assert count_unique_substrings('a') == 1\n\ndef test_two_different_characters():\n    assert count_unique_substrings('ab') == 3  # \"a\", \"b\", \"ab\"\n\ndef test_two_same_characters():\n    assert count_unique_substrings('aa') == 2  # \"a\", \"aa\"\n\ndef test_example_case1():\n    assert count_unique_substrings('abc') == 6  # \"a\", \"b\", \"c\", \"ab\", \"bc\", \"abc\"\n\ndef test_example_case2():\n    assert count_unique_substrings('aaa') == 3  # \"a\", \"aa\", \"aaa\"\n\ndef test_all_unique_chars():\n    assert count_unique_substrings('abcd') == 10  # all possible substrings \"a\", \"b\", \"c\", \"d\", \"ab\", \"bc\", \"cd\", \"abc\", \"bcd\", \"abcd\"\n\ndef test_repeated_pattern():\n    assert count_unique_substrings('abab') == 7  # \"a\", \"b\", \"ab\", \"ba\", \"aba\", \"bab\", \"abab\"\n\ndef test_empty_string():\n    assert count_unique_substrings('') == 0  # no substrings"
}