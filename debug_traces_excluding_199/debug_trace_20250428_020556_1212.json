{
  "data_source": "kodcode",
  "model_code": "def solve_sudoku(board):\n    def find_possible(row, col):\n        row_nums = set()\n        for num in board[row]:\n            if num != '.':\n                row_nums.add(num)\n        col_nums = set()\n        for i in range(9):\n            num = board[i][col]\n            if num != '.':\n                col_nums.add(num)\n        subgrid_row = row // 3\n        subgrid_col = col // 3\n        subgrid_nums = set()\n        for i in range(3):\n            for j in range(3):\n                num = board[i + subgrid_row][j + subgrid_col]\n                if num != '.':\n                    subgrid_nums.add(num)\n        possible = set(range(1, 10)) - row_nums - col_nums - subgrid_nums\n        return sorted(possible)\n    \n    board = [row[:] for row in board]\n    while True:\n        changed = False\n        for i in range(9):\n            for j in range(9):\n                if board[i][j] == '.':\n                    possible = find_possible(i, j)\n                    if len(possible) == 1:\n                        board[i][j] = possible[0]\n                        changed = True\n        if not changed:\n            break\n    return board",
  "tests": "from solution import solve_sudoku\n\ndef test_sudoku():\n    board = [\n        ['5', '3', '.', '.', '7', '.', '.', '.', '.'],\n        ['6', '.', '.', '1', '9', '5', '.', '.', '.'],\n        ['.', '9', '8', '.', '.', '.', '.', '6', '.'],\n        ['8', '.', '.', '.', '6', '.', '.', '.', '3'],\n        ['4', '.', '.', '8', '.', '3', '.', '.', '1'],\n        ['7', '.', '.', '.', '2', '.', '.', '.', '6'],\n        ['.', '6', '.', '.', '.', '.', '2', '8', '.'],\n        ['.', '.', '.', '4', '1', '9', '.', '.', '5'],\n        ['.', '.', '.', '.', '8', '.', '.', '7', '9']\n    ]\n    \n    solve_sudoku(board)\n    \n    expected = [\n        ['5', '3', '4', '6', '7', '8', '9', '1', '2'],\n        ['6', '7', '2', '1', '9', '5', '3', '4', '8'],\n        ['1', '9', '8', '3', '4', '2', '5', '6', '7'],\n        ['8', '5', '9', '7', '6', '1', '4', '2', '3'],\n        ['4', '2', '6', '8', '5', '3', '7', '9', '1'],\n        ['7', '1', '3', '9', '2', '4', '8', '5', '6'],\n        ['9', '6', '1', '5', '3', '7', '2', '8', '4'],\n        ['2', '8', '7', '4', '1', '9', '6', '3', '5'],\n        ['3', '4', '5', '2', '8', '6', '1', '7', '9']\n    ]\n    \n    assert board == expected"
}