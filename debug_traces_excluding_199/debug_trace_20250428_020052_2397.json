{
  "data_source": "kodcode",
  "model_code": "import sys\n\ndef letter_frequency_analyzer():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    dot_index = lines.index('.')\n    test_cases = lines[:dot_index]\n    \n    for case in test_cases:\n        s = case.strip()\n        counts = {}\n        for c in s:\n            counts[c] = counts.get(c, 0) + 1\n        max_freq = max(counts.values())\n        most_common = [k for k, v in counts.items() if v == max_freq]\n        most_common_sorted = sorted(most_common)\n        print(' '.join(most_common_sorted))\n\nletter_frequency_analyzer()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}