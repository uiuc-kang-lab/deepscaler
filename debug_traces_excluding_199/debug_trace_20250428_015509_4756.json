{
  "data_source": "kodcode",
  "model_code": "def letter_frequency_analyzer(input_lines):\n    results = []\n    for line in input_lines:\n        count = {}\n        for char in line:\n            count[char] = count.get(char, 0) + 1\n        max_freq = max(count.values())\n        most_common = [char for char, cnt in count.items() if cnt == max_freq]\n        most_common_sorted = sorted(most_common)\n        results.append(' '.join(most_common_sorted))\n    return results\n\n# Read the input until a '.' is encountered\nlines = []\nwhile True:\n    line = input().strip()\n    if line == '.':\n        break\n    lines.append(line)\n\n# Process and print the results\noutput = letter_frequency_analyzer(lines)\nfor item in output:\n    print(item)",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}