{
  "data_source": "kodcode",
  "model_code": "import sys\n\ndef letter_frequency_analyzer():\n    lines = []\n    while True:\n        line = sys.stdin.readline()\n        if line.strip() == '.':\n            break\n        lines.append(line.strip())\n    \n    result = []\n    for line in lines:\n        freq = {}\n        for c in line:\n            freq[c] = freq.get(c, 0) + 1\n        \n        if not freq:\n            continue\n        \n        max_freq = max(freq.values())\n        max_chars = [char for char, count in freq.items() if count == max_freq]\n        max_chars.sort()\n        result.append(' '.join(max_chars))\n    \n    print('\\n'.join(result))\n\nletter_frequency_analyzer()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}