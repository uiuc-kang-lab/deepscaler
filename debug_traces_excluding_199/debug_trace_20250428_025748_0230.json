{
  "data_source": "kodcode",
  "model_code": "MOD = 998244353\n\ndef count_ways(n, m, grid):\n    # Convert grid to 0-based indices\n    grid = [list(row) for row in grid]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1  # Starting point\n\n    directions = [ (1, 2), (1, -2), (-1, 2), (-1, -2),\n                   (2, 1), (2, -1), (-2, 1), (-2, -1) ]\n\n    for i in range(n):\n        for j in range(m):\n            if dp[i][j] == 0:\n                continue\n            for dx, dy in directions:\n                new_i = i + dx\n                new_j = j + dy\n                if 0 <= new_i < n and 0 <= new_j < m:\n                    if grid[new_i][new_j] == '.':\n                        dp[new_i][new_j] = (dp[new_i][new_j] + dp[i][j]) % MOD\n\n    return dp[n-1][m-1] % MOD",
  "tests": "from solution import count_ways\n\ndef test_count_ways_3x3():\n    grid = [\n        ['.', '.', '.'],\n        ['.', '*', '.'],\n        ['.', '.', '.']\n    ]\n    assert count_ways(3, 3, grid) == 2\n\ndef test_count_ways_4x4():\n    grid = [\n        ['.', '.', '.', '.'],\n        ['.', '*', '.', '.'],\n        ['.', '.', '*', '.'],\n        ['.', '.', '.', '.']\n    ]\n    assert count_ways(4, 4, grid) == 4\n\ndef test_count_ways_single_cell():\n    grid = [\n        ['.']\n    ]\n    assert count_ways(1, 1, grid) == 1\n\ndef test_count_ways_blocked_start():\n    grid = [\n        ['*', '.', '.'],\n        ['.', '.', '.'],\n        ['.', '.', '.']\n    ]\n    assert count_ways(3, 3, grid) == 0\n\ndef test_count_ways_blocked_finish():\n    grid = [\n        ['.', '.', '.'],\n        ['.', '.', '.'],\n        ['.', '.', '*']\n    ]\n    assert count_ways(3, 3, grid) == 0\n\ndef test_count_ways_all_safe():\n    grid = [\n        ['.', '.', '.', '.'],\n        ['.', '.', '.', '.'],\n        ['.', '.', '.', '.'],\n        ['.', '.', '.', '.']\n    ]\n    assert count_ways(4, 4, grid) == 20\n\ndef test_count_ways_entirely_blocked():\n    grid = [\n        ['.', '*', '.'],\n        ['*', '*', '*'],\n        ['.', '*', '.']\n    ]\n    assert count_ways(3, 3, grid) == 0"
}