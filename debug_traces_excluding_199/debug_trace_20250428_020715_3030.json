{
  "data_source": "kodcode",
  "model_code": "N, v, F = map(int, input().split())\nif F >= N:\n    time = N / v\n    print(\"{0:.18f}\".format(time))\nelse:\n    print(\"Impossible\")",
  "tests": "import pytest\nfrom solution import minimum_time_to_destination\n\ndef test_example_1():\n    assert minimum_time_to_destination(10, 2, 15) == 5.0\n\ndef test_example_2():\n    assert minimum_time_to_destination(20, 5, 18) == \"Impossible\"\n\ndef test_exact_fuel():\n    assert minimum_time_to_destination(10, 5, 10) == 2.0\n\ndef test_more_than_enough_fuel():\n    assert minimum_time_to_destination(50, 10, 100) == 5.0\n\ndef test_insufficient_fuel():\n    assert minimum_time_to_destination(30, 3, 25) == \"Impossible\"\n\ndef test_small_distance():\n    assert minimum_time_to_destination(1, 1, 1) == 1.0\n\ndef test_high_speed():\n    assert minimum_time_to_destination(10, 20, 11) == 0.5  # Reaches the required distance before using all the fuel\n\ndef test_remaining_fuel_but_not_enough_distance():\n    assert minimum_time_to_destination(5, 10, 100) == 0.5  # High speed doesn't affect since distance is small"
}