{
  "data_source": "kodcode",
  "model_code": "def rotate_matrix(matrix):\n    N = len(matrix)\n    transposed = [list(row) for row in zip(*matrix)]\n    return [row[::-1] for row in transposed]",
  "tests": "def test_rotate_matrix_3x3():\n    matrix = [\n        [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 9]\n    ]\n    expected = [\n        [7, 4, 1],\n        [8, 5, 2],\n        [9, 6, 3]\n    ]\n    assert rotate_matrix(matrix) == expected\n\ndef test_rotate_matrix_2x2():\n    matrix = [\n        [1, 2],\n        [3, 4]\n    ]\n    expected = [\n        [3, 1],\n        [4, 2]\n    ]\n    assert rotate_matrix(matrix) == expected\n\ndef test_rotate_matrix_1x1():\n    matrix = [\n        [1]\n    ]\n    expected = [\n        [1]\n    ]\n    assert rotate_matrix(matrix) == expected\n\ndef test_rotate_matrix_4x4():\n    matrix = [\n        [1, 2, 3, 4],\n        [5, 6, 7, 8],\n        [9, 10, 11, 12],\n        [13, 14, 15, 16]\n    ]\n    expected = [\n        [13, 9, 5, 1],\n        [14, 10, 6, 2],\n        [15, 11, 7, 3],\n        [16, 12, 8, 4]\n    ]\n    assert rotate_matrix(matrix) == expected\n\ndef test_rotate_matrix_5x5():\n    matrix = [\n        [1, 2, 3, 4, 5],\n        [6, 7, 8, 9, 10],\n        [11, 12, 13, 14, 15],\n        [16, 17, 18, 19, 20],\n        [21, 22, 23, 24, 25]\n    ]\n    expected = [\n        [21, 16, 11, 6, 1],\n        [22, 17, 12, 7, 2],\n        [23, 18, 13, 8, 3],\n        [24, 19, 14, 9, 4],\n        [25, 20, 15, 10, 5]\n    ]\n    assert rotate_matrix(matrix) == expected"
}