{
  "data_source": "kodcode",
  "model_code": "import sys\nfrom collections import defaultdict\n\ndef letter_frequency_analyzer():\n    freq = defaultdict(int)\n    for line in sys.stdin:\n        stripped_line = line.strip()\n        if stripped_line == '.':\n            break\n        for c in stripped_line:\n            if c.islower():\n                freq[c] += 1\n    if not freq:\n        return\n    max_freq = max(freq.values())\n    max_chars = [k for k, v in freq.items() if v == max_freq]\n    max_chars.sort()\n    print(' '.join(max_chars))\n\nif __name__ == \"__main__\":\n    letter_frequency_analyzer()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}