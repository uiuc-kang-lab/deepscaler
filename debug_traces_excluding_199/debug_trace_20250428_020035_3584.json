{
  "data_source": "kodcode",
  "model_code": "def count_greater_than_right(buildings):\n    count = 0\n    for i in range(len(buildings)):\n        all_less_or_equal = True\n        for j in range(i + 1, len(buildings)):\n            if buildings[j] > buildings[i]:\n                all_less_or_equal = False\n                break\n        if all_less_or_equal:\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    test_example_1 = buildings = [4, 2, 7, 1, 3]\n    assert count_greater_than_right(buildings) == 2\n    \n    test_example_2 = buildings = [1, 2, 3]\n    assert count_greater_than_right(buildings) == 1\n    \n    test_example_3 = buildings = [3, 3, 3, 3]\n    assert count_greater_than_right(buildings) == 1\n    \n    test_example_4 = buildings = [1, 2, 3, 4, 5]\n    assert count_greater_than_right(buildings) == 1\n    \n    test_example_5 = buildings = [5, 4, 3, 2, 1]\n    assert count_greater_than_right(buildings) == 1\n    \n    test_example_6 = buildings = [7, 10, 4, 10, 5, 6, 2]\n    assert count_greater_than_right(buildings) == 3\n    \n    test_example_7 = buildings = [2, 9, 4, 1, 10, 3, 5, 7, 6, 8]\n    assert count_greater_than_right(buildings) == 3\n    \n    test_example_8 = buildings = [100, 99, 98, 97, 96, 95, 94, 93, 92, 91]\n    assert count_greater_than_right(buildings) == 1",
  "tests": "from solution import count_greater_than_right\n\ndef test_example_1():\n    buildings = [4, 2, 7, 1, 3]\n    assert count_greater_than_right(buildings) == 2\n\ndef test_example_2():\n    buildings = [1, 2, 3]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_all_equal_heights():\n    buildings = [3, 3, 3, 3]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_single_building():\n    buildings = [10]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_decreasing_heights():\n    buildings = [5, 4, 3, 2, 1]\n    assert count_greater_than_right(buildings) == 5\n\ndef test_increasing_heights():\n    buildings = [1, 2, 3, 4, 5]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_random_heights():\n    buildings = [7, 10, 4, 10, 5, 6, 2]\n    assert count_greater_than_right(buildings) == 3\n    \ndef test_large_input():\n    buildings = [i for i in range(100000, 0, -1)]\n    assert count_greater_than_right(buildings) == 100000"
}