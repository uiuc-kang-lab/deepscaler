{
  "data_source": "kodcode",
  "model_code": "def letter_frequency_analyzer():\n    import sys\n    lines = [line.strip() for line in sys.stdin if line.strip() != '.']\n    for line in lines:\n        counts = {}\n        for char in line:\n            if char.islower():\n                counts[char] = counts.get(char, 0) + 1\n        if not counts:\n            continue\n        max_freq = max(counts.values())\n        most_common = [char for char, cnt in counts.items() if cnt == max_freq]\n        most_common.sort()\n        print(' '.join(most_common))\n\nletter_frequency_analyzer()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}