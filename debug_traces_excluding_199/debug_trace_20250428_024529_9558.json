{
  "data_source": "eurus",
  "model_code": "import math\n\ndef get_divisors(x):\n    divisors = set()\n    for i in range(1, int(math.isqrt(x)) + 1):\n        if x % i == 0:\n            divisors.add(i)\n            divisors.add(x // i)\n    return divisors\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndivisors = set()\nfor num in a:\n    divisors.update(get_divisors(num))\n\nsorted_divisors = sorted(divisors, reverse=True)\n\nfor d in sorted_divisors:\n    valid = True\n    for ai in a:\n        m_max = (ai // d) * d\n        if m_max < (ai - k):\n            valid = False\n            break\n    if valid:\n        print(d)\n        exit()\n\nprint(1)",
  "tests": "{\"inputs\": [\"6 1\\n3 6 10 12 13 16\", \"5 3\\n8 21 52 15 77\", \"13 11\\n55 16 26 40 84 80 48 52 25 43 75 21 58\", \"18 9\\n85 29 29 15 17 71 46 69 48 80 44 73 40 55 61 57 22 68\", \"25 7\\n67 18 36 85 64 22 32 66 17 64 66 65 82 36 16 52 19 70 38 51 17 32 85 16 64\", \"7 1\\n12 84 21 60 33 21 45\", \"1 1\\n1\", \"10 10\\n40141 53368 66538 64507 78114 34253 73242 42141 37430 6\", \"10 7\\n869 1293 12421 1 90901 120214 12403 6543 591870 124\", \"2 84794\\n1000000 1000000\"], \"outputs\": [\"3\", \"7\", \"16\", \"13\", \"16\", \"4\", \"1\", \"6\", \"1\", \"1000000\"]}"
}