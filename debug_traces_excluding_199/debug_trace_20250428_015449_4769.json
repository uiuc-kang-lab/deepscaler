{
  "data_source": "kodcode",
  "model_code": "def analyze_sequence(sequences):\n    result = []\n    for seq in sequences:\n        is_non_decreasing = True\n        for i in range(len(seq) - 1):\n            if seq[i] > seq[i + 1]:\n                is_non_decreasing = False\n                break\n        is_non_increasing = True\n        for i in range(len(seq) - 1):\n            if seq[i] < seq[i + 1]:\n                is_non_increasing = False\n                break\n        if is_non_decreasing or is_non_increasing:\n            result.append(\"STEADY\")\n        else:\n            result.append(\"FLUCTUATING\")\n    return result",
  "tests": "def test_analyze_sequence_steady_case():\n    assert analyze_sequence([[1, 3, 5, 7]]) == [\"STEADY\"]\n\ndef test_analyze_sequence_fluctuating_case():\n    assert analyze_sequence([[4, 2, -2, -5]]) == [\"FLUCTUATING\"]\n\ndef test_analyze_sequence_mixed_cases():\n    assert analyze_sequence([\n        [1, 3, 5, 7],\n        [4, 2, -2, -5]\n    ]) == [\"STEADY\", \"FLUCTUATING\"]\n\ndef test_analyze_sequence_edge_case_two_elements():\n    assert analyze_sequence([[1, 5]]) == [\"STEADY\"]\n\ndef test_analyze_sequence_same_elements():\n    assert analyze_sequence([[3, 3, 3, 3]]) == [\"STEADY\"]\n    \n    assert analyze_sequence([[2, 2]]) == [\"STEADY\"]"
}