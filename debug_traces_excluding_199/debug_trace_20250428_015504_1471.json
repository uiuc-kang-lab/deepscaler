{
  "data_source": "kodcode",
  "model_code": "def can_form_palindrome(s):\n    if not s:\n        return \"YES\"\n    freq = {}\n    for c in s:\n        freq[c] = freq.get(c, 0) + 1\n    odd_counts = sum(1 for count in freq.values() if count % 2 != 0)\n    return \"YES\" if odd_counts <= 1 else \"NO\"",
  "tests": "from solution import can_form_palindrome\n\ndef test_even_length_palindrome():\n    assert can_form_palindrome(\"aabb\") == \"YES\"\n    \ndef test_no_palindrome_possible():\n    assert can_form_palindrome(\"abc\") == \"NO\"\n    \ndef test_odd_length_palindrome():\n    assert can_form_palindrome(\"racecar\") == \"YES\"\n    \ndef test_long_palindrome_possible():\n    assert can_form_palindrome(\"aabbhijkkjih\") == \"YES\"\n    \ndef test_single_character():\n    assert can_form_palindrome(\"a\") == \"YES\"\n    \ndef test_two_different_characters():\n    assert can_form_palindrome(\"ab\") == \"NO\"\n    \ndef test_palindrome_with_odd_char_count():\n    assert can_form_palindrome(\"aaabbbb\") == \"YES\""
}