{
  "data_source": "kodcode",
  "model_code": "import sys\n\ndef letter_frequency_analyzer():\n    lines = [line.strip() for line in sys.stdin if line.strip()]\n    terminator = lines[-1]\n    for s in lines[:-1]:\n        count = {}\n        for char in s:\n            count[char] = count.get(char, 0) + 1\n        max_freq = max(count.values())\n        max_chars = [char for char, cnt in count.items() if cnt == max_freq]\n        max_chars.sort()\n        print(' '.join(max_chars))\n\nletter_frequency_analyzer()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}