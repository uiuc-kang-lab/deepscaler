{
  "data_source": "kodcode",
  "model_code": "def solve_sudoku(board):\n    board = [list(row) for row in board]\n    while True:\n        empty = []\n        for row in range(9):\n            for col in range(9):\n                if board[row][col] == '.':\n                    empty.append((row, col))\n        if not empty:\n            break\n        for cell in empty:\n            row, col = cell\n            used = set()\n            # Check row\n            for num in board[row]:\n                used.add(num)\n            # Check column\n            for r in range(9):\n                used.add(board[r][col])\n            # Check subgrid\n            for i in range(3):\n                for j in range(3):\n                    used.add(board[i*3 + row][j*3 + col])\n            # Determine possible numbers\n            possible = []\n            for num in range(1, 10):\n                if num not in used:\n                    possible.append(num)\n            if len(possible) == 1:\n                board[row][col] = possible[0]\n                empty = [e for e in empty if e != (row, col)]\n                break\n        if not empty:\n            break\n    return board",
  "tests": "from solution import solve_sudoku\n\ndef test_sudoku():\n    board = [\n        ['5', '3', '.', '.', '7', '.', '.', '.', '.'],\n        ['6', '.', '.', '1', '9', '5', '.', '.', '.'],\n        ['.', '9', '8', '.', '.', '.', '.', '6', '.'],\n        ['8', '.', '.', '.', '6', '.', '.', '.', '3'],\n        ['4', '.', '.', '8', '.', '3', '.', '.', '1'],\n        ['7', '.', '.', '.', '2', '.', '.', '.', '6'],\n        ['.', '6', '.', '.', '.', '.', '2', '8', '.'],\n        ['.', '.', '.', '4', '1', '9', '.', '.', '5'],\n        ['.', '.', '.', '.', '8', '.', '.', '7', '9']\n    ]\n    \n    solve_sudoku(board)\n    \n    expected = [\n        ['5', '3', '4', '6', '7', '8', '9', '1', '2'],\n        ['6', '7', '2', '1', '9', '5', '3', '4', '8'],\n        ['1', '9', '8', '3', '4', '2', '5', '6', '7'],\n        ['8', '5', '9', '7', '6', '1', '4', '2', '3'],\n        ['4', '2', '6', '8', '5', '3', '7', '9', '1'],\n        ['7', '1', '3', '9', '2', '4', '8', '5', '6'],\n        ['9', '6', '1', '5', '3', '7', '2', '8', '4'],\n        ['2', '8', '7', '4', '1', '9', '6', '3', '5'],\n        ['3', '4', '5', '2', '8', '6', '1', '7', '9']\n    ]\n    \n    assert board == expected"
}