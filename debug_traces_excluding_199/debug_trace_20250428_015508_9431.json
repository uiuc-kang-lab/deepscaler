{
  "data_source": "kodcode",
  "model_code": "import sys\n\ndef letter_frequency_analyzer(input_lines):\n    for line in input_lines:\n        if line == '.':\n            break\n        freq = {}\n        for char in line:\n            if char in freq:\n                freq[char] += 1\n            else:\n                freq[char] = 1\n        max_count = max(freq.values()) if freq else 0\n        most_common = [char for char, cnt in freq.items() if cnt == max_count]\n        most_common_sorted = sorted(most_common)\n        print(' '.join(most_common_sorted))\n\nif __name__ == \"__main__\":\n    input_lines = [line.rstrip('\\n') for line in sys.stdin if line.strip() != '']\n    letter_frequency_analyzer(input_lines)",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}