{
  "data_source": "kodcode",
  "model_code": "import sys\n\ndef analyze_frequency(s):\n    count = {}\n    for c in s:\n        count[c] = count.get(c, 0) + 1\n    max_freq = max(count.values())\n    most_frequent = [k for k, v in count.items() if v == max_freq]\n    most_frequent.sort()\n    return ' '.join(most_frequent)\n\ndef main():\n    lines = [line.rstrip('\\n') for line in sys.stdin if line.rstrip('\\n')]\n    test_cases = []\n    for line in lines:\n        if line == '.':\n            break\n        test_cases.append(line)\n    for s in test_cases:\n        result = analyze_frequency(s)\n        print(result)\n\nif __name__ == \"__main__\":\n    main()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}