{
  "data_source": "kodcode",
  "model_code": "import sys\n\ndef main():\n    lines = [line.rstrip('\\n') for line in sys.stdin]\n    for line in lines[:-1]:\n        count = [0] * 26\n        for char in line:\n            idx = ord(char) - ord('a')\n            count[idx] += 1\n        max_freq = max(count)\n        result = [chr(i + ord('a')) for i in range(26) if count[i] == max_freq]\n        result.sort()\n        print(' '.join(result))\n\nif __name__ == \"__main__\":\n    main()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}