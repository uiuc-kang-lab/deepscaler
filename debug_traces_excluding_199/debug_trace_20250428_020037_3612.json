{
  "data_source": "kodcode",
  "model_code": "def min_operations(Y):\n    steps = 0\n    while Y > 1:\n        if Y % 2 == 0:\n            Y = Y // 2\n        else:\n            Y -= 1\n        steps += 1\n    return steps\n\nT = int(input())\nfor _ in range(T):\n    Y = int(input())\n    print(min_operations(Y))",
  "tests": "from solution import min_operations_to_transform, process_test_cases\n\ndef test_min_operations_to_transform():\n    assert min_operations_to_transform(2) == 1\n    assert min_operations_to_transform(3) == 2\n    assert min_operations_to_transform(17) == 5\n    assert min_operations_to_transform(1) == 0\n    assert min_operations_to_transform(4) == 2\n    assert min_operations_to_transform(10) == 4\n\ndef test_process_test_cases():\n    assert process_test_cases(3, [2, 3, 17]) == [1, 2, 5]\n    assert process_test_cases(2, [1, 4]) == [0, 2]"
}