{
  "data_source": "kodcode",
  "model_code": "import sys\nfrom collections import defaultdict\n\ndef analyze_test_case(s):\n    freq = defaultdict(int)\n    for c in s:\n        freq[c] += 1\n    if not freq:\n        return []\n    max_freq = max(freq.values())\n    max_letters = [k for k, v in freq.items() if v == max_freq]\n    max_letters.sort()\n    return ' '.join(max_letters)\n\ndef main():\n    lines = [line.strip() for line in sys.stdin if line.strip()]\n    for line in lines:\n        if line == '.':\n            break\n        result = analyze_test_case(line)\n        print(result)\n\nif __name__ == \"__main__\":\n    main()",
  "tests": "from solution import letter_frequency_analyzer\n\ndef test_single_test_case_hello():\n    input_lines = [\"hello\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\"]\n\ndef test_single_test_case_abracadabra():\n    input_lines = [\"abracadabra\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_single_test_case_mississippi():\n    input_lines = [\"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"i s\"]\n\ndef test_multiple_test_cases():\n    input_lines = [\"hello\", \"abracadabra\", \"mississippi\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"l\", \"a\", \"i s\"]\n\ndef test_all_letters_same():\n    input_lines = [\"aaaaaa\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a\"]\n\ndef test_tie_in_frequencies():\n    input_lines = [\"aabbcc\", \".\"]\n    assert letter_frequency_analyzer(input_lines) == [\"a b c\"]"
}