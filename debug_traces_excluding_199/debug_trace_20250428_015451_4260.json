{
  "data_source": "kodcode",
  "model_code": "def count_greater_than_right(buildings: List[int]) -> int:\n    max_right = 0\n    count = 0\n    for i in range(len(buildings) - 1, -1, -1):\n        current = buildings[i]\n        if current > max_right:\n            count += 1\n            max_right = current\n    return count",
  "tests": "from solution import count_greater_than_right\n\ndef test_example_1():\n    buildings = [4, 2, 7, 1, 3]\n    assert count_greater_than_right(buildings) == 2\n\ndef test_example_2():\n    buildings = [1, 2, 3]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_all_equal_heights():\n    buildings = [3, 3, 3, 3]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_single_building():\n    buildings = [10]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_decreasing_heights():\n    buildings = [5, 4, 3, 2, 1]\n    assert count_greater_than_right(buildings) == 5\n\ndef test_increasing_heights():\n    buildings = [1, 2, 3, 4, 5]\n    assert count_greater_than_right(buildings) == 1\n\ndef test_random_heights():\n    buildings = [7, 10, 4, 10, 5, 6, 2]\n    assert count_greater_than_right(buildings) == 3\n    \ndef test_large_input():\n    buildings = [i for i in range(100000, 0, -1)]\n    assert count_greater_than_right(buildings) == 100000"
}