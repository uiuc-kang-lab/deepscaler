{
  "data_source": "kodcode",
  "model_code": "n = int(input())\noperations = [input().strip() for _ in range(n)]\ninventory = {}\n\nfor op in operations:\n    parts = op.split()\n    if parts[0] == '+':\n        item = parts[1]\n        qty = int(parts[2])\n        inventory[item] = inventory.get(item, 0) + qty\n    elif parts[0] == '-':\n        item = parts[1]\n        qty = int(parts[2])\n        inventory[item] = inventory.get(item, 0) - qty\n\nq = int(input())\nqueries = [input().strip() for _ in range(q)]\n\nfor query in queries:\n    item = query\n    if item in inventory:\n        if inventory[item] > 0:\n            print(\"in stock\")\n        else:\n            print(\"out of stock\")\n    else:\n        print(\"out of stock\")",
  "tests": "from solution import process_inventory\n\ndef test_example_case():\n    n = 5\n    operations = [\n        \"+item1 300\",\n        \"-item2 100\",\n        \"+item2 150\",\n        \"-item1 200\",\n        \"-item2 200\"\n    ]\n    q = 3\n    queries = [\"item1\", \"item2\", \"item3\"]\n    expected_output = [\"in stock\", \"out of stock\", \"out of stock\"]\n    assert process_inventory(n, operations, q, queries) == expected_output\n\ndef test_single_operation():\n    n = 1\n    operations = [\"+item1 100\"]\n    q = 1\n    queries = [\"item1\"]\n    expected_output = [\"in stock\"]\n    assert process_inventory(n, operations, q, queries) == expected_output\n\ndef test_zero_quantity():\n    n = 2\n    operations = [\"+item1 100\", \"-item1 100\"]\n    q = 1\n    queries = [\"item1\"]\n    expected_output = [\"out of stock\"]\n    assert process_inventory(n, operations, q, queries) == expected_output\n\ndef test_negative_stock():\n    n = 2\n    operations = [\"-item1 100\", \"+item1 50\"]\n    q = 1\n    queries = [\"item1\"]\n    expected_output = [\"out of stock\"]\n    assert process_inventory(n, operations, q, queries) == expected_output\n\ndef test_multiple_items():\n    n = 3\n    operations = [\"+item1 200\", \"+item2 150\", \"-item2 100\"]\n    q = 2\n    queries = [\"item1\", \"item2\"]\n    expected_output = [\"in stock\", \"in stock\"]\n    assert process_inventory(n, operations, q, queries) == expected_output"
}